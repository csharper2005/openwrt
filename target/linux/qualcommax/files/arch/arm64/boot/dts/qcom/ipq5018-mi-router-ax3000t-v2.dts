/dts-v1/;

#include "ipq5018.dtsi"
#include "ipq5018-ess.dtsi"

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/leds/common.h>

/ {
	model = "Xiaomi Mi Router AX3000T v2";
	compatible = "xiaomi,mi-router-ax3000t-v2", "qcom,ipq5018";

	aliases {
		label-mac-device = &dp1;

		led-boot = &led_status_blue;
		led-failsafe = &led_status_yellow;
		led-running = &led_status_blue;
		led-upgrade = &led_status_yellow;

		serial0 = &blsp1_uart1;
	};

	chosen {
		bootargs-append = " ubi.mtd=rootfs root=/dev/ubiblock0_0 coherent_pool=2M";
		stdout-path = "serial0:115200n8";
	};

	keys {
		compatible = "gpio-keys";

		pinctrl-0 = <&button_pins>;
		pinctrl-names = "default";

		button-0 {
			label = "mesh";
			gpios = <&tlmm 28 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_RESTART>;
			debounce-interval = <60>;
		};

		button-1 {
			label = "reset";
			gpios = <&tlmm 38 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_RESTART>;
			debounce-interval = <60>;
		};
	};

	leds {
		compatible = "pwm-leds";

		// pinctrl-0 = <&pwm_pins>;
		// pinctrl-names = "default";

		led_status_blue: led-0 {
			color = <LED_COLOR_ID_BLUE>;
			function = LED_FUNCTION_STATUS;
			pwms = <&pwm 2 50000>;
			max-brightness = <255>;
		};

		led_status_yellow: led-1 {
			color = <LED_COLOR_ID_YELLOW>;
			function = LED_FUNCTION_STATUS;
			pwms = <&pwm 3 50000>;
			max-brightness = <255>;
		};
	};

	reserved-memory {
		q6_mem_regions: q6_mem_regions@4b000000 {
			no-map;
			reg = <0x0 0x4b000000 0x0 0x3000000>;
		};
	};
};

&sleep_clk {
	clock-frequency = <32000>;
};

&xo_board_clk {
	clock-div = <4>;
	clock-mult = <1>;
};

&blsp1_uart1 {
	status = "okay";

	pinctrl-0 = <&serial_0_pins>;
	pinctrl-names = "default";
};

&crypto {
	status = "okay";
};

&cryptobam {
	status = "okay";
};

&prng {
	status = "okay";
};

&pwm {
	status = "okay";

	#pwm-cells = <2>;
	pinctrl-0 = <&pwm_pins>;
	pinctrl-names = "default";
};

&qfprom {
	status = "okay";
};

&qpic_bam {
	status = "okay";
};

&qpic_nand {
	pinctrl-0 = <&qpic_pins>;
	pinctrl-names = "default";
	status = "okay";

	nand@0 {
		compatible = "spi-nand";
		reg = <0>;
		#address-cells = <1>;
		#size-cells = <1>;

		nand-bus-width = <8>;

		nand-ecc-engine = <&qpic_nand>;
		nand-ecc-step-size = <512>;
		nand-ecc-strength = <4>;

		spi-max-frequency = <50000000>;

		partitions {
			compatible = "fixed-partitions";
			#address-cells = <1>;
			#size-cells = <1>;

			partition@0 {
				label = "0:SBL1";
				reg = <0x0 0x80000>;
				read-only;
			};

			partition@80000 {
				label = "0:MIBIB";
				reg = <0x80000 0x80000>;
				read-only;
			};

			partition@100000 {
				label = "0:BOOTCONFIG";
				reg = <0x100000 0x40000>;
				read-only;
			};

			partition@140000 {
				label = "0:BOOTCONFIG1";
				reg = <0x140000 0x40000>;
				read-only;
			};

			partition@180000 {
				label = "0:QSEE";
				reg = <0x180000 0x100000>;
				read-only;
			};

			partition@280000 {
				label = "0:QSEE_1";
				reg = <0x280000 0x100000>;
				read-only;
			};

			partition@380000 {
				label = "0:DEVCFG";
				reg = <0x380000 0x40000>;
				read-only;
			};

			partition@3c0000 {
				label = "0:DEVCFG_1";
				reg = <0x3c0000 0x40000>;
				read-only;
			};

			partition@400000 {
				label = "0:CDT";
				reg = <0x400000 0x40000>;
				read-only;
			};

			partition@440000 {
				label = "0:CDT_1";
				reg = <0x440000 0x40000>;
				read-only;
			};

			partition@480000 {
				label = "0:APPSBLENV";
				reg = <0x480000 0x80000>;
			};

			partition@500000 {
				label = "0:APPSBL";
				reg = <0x500000 0x140000>;
				read-only;
			};

			partition@640000 {
				label = "0:APPSBL_1";
				reg = <0x640000 0x140000>;
				read-only;
			};

			partition@780000 {
				label = "0:ART";
				reg = <0x780000 0x100000>;
				read-only;

				nvmem-layout {
					compatible = "fixed-layout";
					#address-cells = <1>;
					#size-cells = <1>;

					mac_addr_wan: macaddr@0 {
						reg = <0x0 0x6>;
					};

					mac_addr_lan: macaddr@6 {
						reg = <0x6 0x6>;
					};

					mac_addr_wlan: macaddr@12 {
						reg = <0x12 0x6>;
					};

					caldata: caldata@1000 {
						reg = <0x1000 0x20000>;
					};
				};
			};

			partition@880000 {
				label = "0:TRAINING";
				reg = <0x880000 0x80000>;
				read-only;
			};

			partition@900000 {
				label = "bdata";
				reg = <0x900000 0x80000>;
			};

			partition@980000 {
				label = "crash";
				reg = <0x980000 0x80000>;
				read-only;
			};

			partition@a00000 {
				label = "crash_syslog";
				reg = <0xa00000 0x80000>;
				read-only;
			};

			partition@a80000 {
				label = "ubi_kernel";
				reg = <0xa80000 0x2400000>;
			};

			partition@2e80000 {
				label = "rootfs";
				reg = <0x2e80000 0x5180000>;
			};
		};
	};
};

/*
* ===============================================================
*     _______________________             _____________________
*    |        IPQ5018        |           |        AN8855       |
*    | +------+   +--------+ |           | +------+   +------+ |
*    | | MAC0 |---| GE Phy |-+--- MDI ---+ | Phy4 |---| Phy0 | |
*    | +------+   +--------+ |           | +------+   | Phy1 | |
*    | +------+   +--------+ |           | +------+   | Phy2 | |
*    | | MAC1 |---| Uniphy |-+-- SGMII+--+ | Phy5 |---| Phy3 | |
*    | +------+   +--------+ |           | +------+   +------+ |
*    |_______________________|           |_____________________|
*
* ===============================================================
*/

&switch {
	status = "okay";

	// TODO: AN8855 supports 2500base-x
	switch_mac_mode = <MAC_MODE_SGMII_CHANNEL0>;
	// 0xc in stock:
	// switch_mac_mode = <MAC_MODE_SGMII_PLUS>;

	qcom,port_phyinfo {
		// MAC0 -> GE Phy --- AN8855 Phy4
		port@0 {
			// Like in stock fw
			port_id = <1>;
			mdiobus = <&mdio0>;
			phy_address = <7>;
			phy_dac = <16 16>;
		};

		// MAC1 -> Uniphy --- SGMII --- AN8855 Phy5
		port@1 {
			port_id = <2>;
			// "2500" in stock fw
			// port_mac_sel = "QGMAC_PORT";
			forced-speed = <1000>;
			forced-duplex = <1>;
		};
	};
};

&dp1 {
	status = "okay";

	nvmem-cells = <&mac_addr_wan 0>;
	nvmem-cell-names = "mac-address";

	phy-mode = "sgmii";
};

// MAC1---SGMII--->AN8855 Phy5
&dp2 {
	status = "okay";

	nvmem-cells = <&mac_addr_lan 0>;
	nvmem-cell-names = "mac-address";

	// "nss-dp 39d00000.dp2: probe with driver nss-dp failed with error -14" without this block
	// "2500":
	// swphy: unknown speed
	// dp2: fail to register fixed-link: -22
	// phy-mode = "sgmii";
	// phy-mode = "2500base-x";

	fixed-link {
		speed = <1000>;
		full-duplex;
		pause;
		asym-pause;
	};
};

// IPQ5018 GE Phy -> AN8855 Phy4
&ge_phy {
	qcom,dac-preset-short-cable;
};

&mdio0 {
	status = "okay";
};

&mdio1 {
	status = "okay";

	pinctrl-0 = <&mdio1_pins>;
	pinctrl-names = "default";

	mfd: mfd@1 {
		compatible = "airoha,an8855-mfd";
		reg = <1>;

		reset-gpios = <&tlmm 39 GPIO_ACTIVE_HIGH>;
		reset-assert-us = <10000>;
		reset-deassert-us = <50000>;
	};
};

&mfd {
	efuse {
		compatible = "airoha,an8855-efuse";
		#nvmem-cell-cells = <0>;

		nvmem-layout {
			compatible = "fixed-layout";
			#address-cells = <1>;
			#size-cells = <1>;

			shift_sel_port0_tx_a: shift-sel-port0-tx-a@c {
				reg = <0xc 0x4>;
			};

			shift_sel_port0_tx_b: shift-sel-port0-tx-b@10 {
				reg = <0x10 0x4>;
			};

			shift_sel_port0_tx_c: shift-sel-port0-tx-c@14 {
				reg = <0x14 0x4>;
			};

			shift_sel_port0_tx_d: shift-sel-port0-tx-d@18 {
				reg = <0x18 0x4>;
			};

			shift_sel_port1_tx_a: shift-sel-port1-tx-a@1c {
				reg = <0x1c 0x4>;
			};

			shift_sel_port1_tx_b: shift-sel-port1-tx-b@20 {
				reg = <0x20 0x4>;
			};

			shift_sel_port1_tx_c: shift-sel-port1-tx-c@24 {
				reg = <0x24 0x4>;
			};

			shift_sel_port1_tx_d: shift-sel-port1-tx-d@28 {
				reg = <0x28 0x4>;
			};

			shift_sel_port2_tx_a: shift-sel-port2-tx-a@2c {
				reg = <0x2c 0x4>;
			};

			shift_sel_port2_tx_b: shift-sel-port2-tx-b@30 {
				reg = <0x30 0x4>;
			};

			shift_sel_port2_tx_c: shift-sel-port2-tx-c@34 {
				reg = <0x34 0x4>;
			};

			shift_sel_port2_tx_d: shift-sel-port2-tx-d@38 {
				reg = <0x38 0x4>;
			};

			shift_sel_port3_tx_a: shift-sel-port3-tx-a@4c {
				reg = <0x4c 0x4>;
			};

			shift_sel_port3_tx_b: shift-sel-port3-tx-b@50 {
				reg = <0x50 0x4>;
			};

			shift_sel_port3_tx_c: shift-sel-port3-tx-c@54 {
				reg = <0x54 0x4>;
			};

			shift_sel_port3_tx_d: shift-sel-port3-tx-d@58 {
				reg = <0x58 0x4>;
			};

			shift_sel_port4_tx_a: shift-sel-port3-tx-a@5c {
				reg = <0x5c 0x4>;
			};

			shift_sel_port4_tx_b: shift-sel-port3-tx-b@60 {
				reg = <0x60 0x4>;
			};

			shift_sel_port4_tx_c: shift-sel-port3-tx-c@64 {
				reg = <0x64 0x4>;
			};

			shift_sel_port4_tx_d: shift-sel-port3-tx-d@68 {
				reg = <0x68 0x4>;
			};
		};
	};

	ethernet-switch {
		compatible = "airoha,an8855-switch";
		airoha,ext-surge;

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;
				label = "lan4";
				phy-mode = "internal";
				phy-handle = <&internal_phy1>;
			};

			port@1 {
				reg = <1>;
				label = "lan3";
				phy-mode = "internal";
				phy-handle = <&internal_phy2>;
			};

			port@2 {
				reg = <2>;
				label = "lan2";
				phy-mode = "internal";
				phy-handle = <&internal_phy3>;
			};

			port@3 {
				reg = <3>;
				label = "wan";
				phy-mode = "internal";
				phy-handle = <&internal_phy4>;
			};

			// CPU wan in stock fw
			port@4 {
				reg = <4>;
				label = "port4";
				// ethernet = <&dp1>;
				phy-mode = "internal";
				phy-handle = <&internal_phy5>;
			};

			// CPU lan in stock fw
			port@5 {
				reg = <5>;
				phy-mode = "sgmii";
				// phy-mode = "1000base-x";
				ethernet = <&dp2>;
				// qca,sgmii-enable-pll;
				// status = "disabled";
				// managed = "in-band-status";

				fixed-link {
					speed = <1000>;
					full-duplex;
					pause;
					asym-pause;
				};
			};
		};
	};

	mdio {
		compatible = "airoha,an8855-mdio";
		#address-cells = <1>;
		#size-cells = <0>;

		internal_phy1: phy@1 {
			reg = <1>;

			nvmem-cells = <&shift_sel_port0_tx_a>,
				      <&shift_sel_port0_tx_b>,
				      <&shift_sel_port0_tx_c>,
				      <&shift_sel_port0_tx_d>;
			nvmem-cell-names = "tx_a", "tx_b",
					   "tx_c", "tx_d";
		};

		internal_phy2: phy@2 {
			reg = <2>;

			nvmem-cells = <&shift_sel_port1_tx_a>,
				      <&shift_sel_port1_tx_b>,
				      <&shift_sel_port1_tx_c>,
				      <&shift_sel_port1_tx_d>;
			nvmem-cell-names = "tx_a", "tx_b",
					   "tx_c", "tx_d";
		};

		internal_phy3: phy@3 {
			reg = <3>;

			nvmem-cells = <&shift_sel_port2_tx_a>,
				      <&shift_sel_port2_tx_b>,
				      <&shift_sel_port2_tx_c>,
				      <&shift_sel_port2_tx_d>;
			nvmem-cell-names = "tx_a", "tx_b",
					   "tx_c", "tx_d";
		};

		internal_phy4: phy@4 {
			reg = <4>;

			nvmem-cells = <&shift_sel_port3_tx_a>,
				      <&shift_sel_port3_tx_b>,
				      <&shift_sel_port3_tx_c>,
				      <&shift_sel_port3_tx_d>;

			nvmem-cell-names = "tx_a", "tx_b",
					   "tx_c", "tx_d";
		};

		internal_phy5: phy@5 {
			reg = <5>;

			nvmem-cells = <&shift_sel_port4_tx_a>,
				      <&shift_sel_port4_tx_b>,
				      <&shift_sel_port4_tx_c>,
				      <&shift_sel_port4_tx_d>;

			nvmem-cell-names = "tx_a", "tx_b",
					   "tx_c", "tx_d";
		};
	};
};

&tlmm {
	button_pins: button-state {
		pins = "gpio28", "gpio38";
		function = "gpio";
		drive-strength = <8>;
		bias-pull-up;
	};

	mdio1_pins: mdio-state {
		mdc-pins {
			pins = "gpio36";
			function = "mdc";
			drive-strength = <8>;
			bias-pull-up;
		};

		mdio-pins {
			pins = "gpio37";
			function = "mdio";
			drive-strength = <8>;
			bias-pull-up;
		};
	};

	pwm_pins: pwm-state {
		mux-0 {
			pins = "gpio46";
			function = "pwm0";
			drive-strength = <8>;
			// bias-pull-down;
		};
	};

	qpic_pins: qpic-state {
		clock-pins {
			pins = "gpio9";
			function = "qspi_clk";
			drive-strength = <8>;
			bias-disable;
		};

		cs-pins {
			pins = "gpio8";
			function = "qspi_cs";
			drive-strength = <8>;
			bias-disable;
		};

		data-pins {
			pins = "gpio4", "gpio5", "gpio6", "gpio7";
			function = "qspi_data";
			drive-strength = <8>;
			bias-disable;
		};
	};

	serial_0_pins: uart0-state {
		pins = "gpio20", "gpio21";
		function = "blsp0_uart0";
		bias-disable;
	};
};

&tsens {
	status = "okay";
};

&q6v5_wcss {
	status = "okay";

	memory-region = <&q6_mem_regions>;
	firmware-name = "ath11k/IPQ5018/hw1.0/q6_fw.mdt",
			"ath11k/IPQ5018/hw1.0/m3_fw.mdt",
			"ath11k/QCN6122/hw1.0/m3_fw.mdt";

	boot-args = <
			/*       type:	*/	0x1	/* PCIE0 5G */
			/*     length:	*/	4
			/*     UPD ID:	*/	2
			/* reset GPIO:	*/	15
			/*   reserved:	*/	0 0>;

	// IPQ5018
	q6_wcss_pd1: pd-1 {
		firmware-name = "ath11k/IPQ5018/hw1.0/q6_fw.mdt";

		resets =
			<&gcc GCC_WCSSAON_RESET>,
			<&gcc GCC_WCSS_BCR>,
			<&gcc GCC_CE_BCR>;

		reset-names =
			"wcss_aon_reset",
			"wcss_reset",
			"ce_reset";

		clocks =
			<&gcc GCC_WCSS_AHB_S_CLK>,
			<&gcc GCC_WCSS_ACMT_CLK>,
			<&gcc GCC_WCSS_AXI_M_CLK>;

		clock-names =
			"gcc_wcss_ahb_s_clk",
			"gcc_wcss_acmt_clk",
			"gcc_wcss_axi_m_clk";

		interrupts-extended =
			<&wcss_smp2p_in 8 0>,
			<&wcss_smp2p_in 9 0>,
			<&wcss_smp2p_in 12 0>,
			<&wcss_smp2p_in 11 0>;

		interrupt-names =
			"fatal",
			"ready",
			"spawn-ack",
			"stop-ack";

		qcom,smem-states =
			<&wcss_smp2p_out 8>,
			<&wcss_smp2p_out 9>,
			<&wcss_smp2p_out 10>;

		qcom,smem-state-names =
			"shutdown",
			"stop",
			"spawn";
	};

	// QCN6102 5G
	q6_wcss_pd2: pd-2 {
		firmware-name = "ath11k/IPQ5018/hw1.0/q6_fw.mdt";

		interrupts-extended =
			<&wcss_smp2p_in 16 IRQ_TYPE_NONE>,
			<&wcss_smp2p_in 17 IRQ_TYPE_NONE>,
			<&wcss_smp2p_in 20 IRQ_TYPE_NONE>,
			<&wcss_smp2p_in 19 IRQ_TYPE_NONE>;

		interrupt-names =
			"fatal",
			"ready",
			"spawn-ack",
			"stop-ack";

		qcom,smem-states =
			<&wcss_smp2p_out 16>,
			<&wcss_smp2p_out 17>,
			<&wcss_smp2p_out 18>;

		qcom,smem-state-names =
			"shutdown",
			"stop",
			"spawn";

		status = "okay";
	};
};

&wifi0 {
	status = "okay";

	// IPQ5018
	qcom,rproc = <&q6_wcss_pd1>;
	qcom,ath11k-calibration-variant = "Xiaomi-Mi-Router-AX3000T-v2";
	qcom,ath11k-fw-memory-mode = <1>;
	qcom,bdf-addr = <0x4c400000>;
};

&wifi1 {
	status = "okay";

	// QCN6102 5G
	qcom,rproc = <&q6_wcss_pd2>;
	qcom,userpd-subsys-name = "q6v5_wcss_userpd2";
	qcom,ath11k-calibration-variant = "Xiaomi-Mi-Router-AX3000T-v2";
	qcom,ath11k-fw-memory-mode = <1>;
	qcom,bdf-addr = <0x4d100000>;
	qcom,m3-dump-addr = <0x4df00000>;
};
